#######################################################################################################################
#######################################################################################################################
# Title:        Python Electric Vehicle Power Toolkit (PyEVPowerKit)
# Topic:        EV Modeling
# File:         main
# Date:         18.03.2024
# Author:       Dr. Pascal A. Schirmer
# Version:      V.0.1
# Copyright:    Pascal Schirmer
#######################################################################################################################
#######################################################################################################################

#######################################################################################################################
# Function Description
#######################################################################################################################
"""
A short description of the class goes here.
Inputs:     1)
            2)
            N)
Outputs:    1)
            2)
            M)
"""

#######################################################################################################################
# Import libs
#######################################################################################################################
# ==============================================================================
# Internal
# ==============================================================================
from src.data.loadData import loadData
from src.data.loadSetup import loadSetup
from src.data.sampleData import sampleData
from src.general.mechVehPara import mechVehPara
from src.model.Veh.mechVeh import mechVeh
from src.model.Veh.mechWhe import mechWhe
from src.model.Veh.elecVeh import elecVeh
from src.model.Veh.therVeh import therVeh
from src.model.elecSim import elecSim
from src.model.mechSim import mechSim
from src.model.therSim import therSim
from src.model.Gbx.classGBX import classGBX
from src.model.Ema.classEMA import classPSM

# ==============================================================================
# External
# ==============================================================================
from tqdm import tqdm


#######################################################################################################################
# Function
#######################################################################################################################
def main(setup, path):
    ###################################################################################################################
    # MSG IN
    ###################################################################################################################
    print("----------------------------------------------------------------------------------------------------------")
    print("----------------------------------------------------------------------------------------------------------")
    print("Welcome to the PyEVPowerKit toolkit")
    print("Author:     Dr. Pascal A. Schirmer")
    print("Copyright:  Pascal Schirmer")
    print("Version:    v.0.1")
    print("Date:       18.03.2024")
    print("----------------------------------------------------------------------------------------------------------")
    print("----------------------------------------------------------------------------------------------------------")

    ###################################################################################################################
    # Init
    ###################################################################################################################
    # ==============================================================================
    # Temporal Variables
    # ==============================================================================
    dataTime = {'VEH': {}, 'WHE': {'F': {}, 'R': {}}, 'GBX': {}, 'EMA': {}, 'INV': {}, 'HVS': {}}

    # ==============================================================================
    # Others
    # ==============================================================================

    ###################################################################################################################
    # Loading
    ###################################################################################################################
    # ==============================================================================
    # MSG IN
    # ==============================================================================
    print("=======================================================================")
    print("START: Loading")
    print("=======================================================================")

    # ==============================================================================
    # Parameter
    # ==============================================================================
    setup = loadSetup(setup, path)

    # ==============================================================================
    # Data
    # ==============================================================================
    data = loadData(setup, path)

    # ==============================================================================
    # MSG OUT
    # ==============================================================================
    print("=======================================================================")
    print("END: Loading")
    print("=======================================================================")
    print("\n")

    ###################################################################################################################
    # Pre-Processing
    ###################################################################################################################
    # ==============================================================================
    # MSG IN
    # ==============================================================================
    print("=======================================================================")
    print("START: Pre-Processing")
    print("=======================================================================")

    # ==============================================================================
    # Data
    # ==============================================================================
    # ------------------------------------------
    # Msg
    # ------------------------------------------
    print("------------------------------------------")
    print("Pre-processing Data")
    print("------------------------------------------")

    # ------------------------------------------
    # Resampling
    # ------------------------------------------
    data = sampleData(data, setup)

    # ==============================================================================
    # Parameter
    # ==============================================================================
    # ------------------------------------------
    # Msg
    # ------------------------------------------
    print("------------------------------------------")
    print("Pre-processing Parameters")
    print("------------------------------------------")

    # ------------------------------------------
    # Calc
    # ------------------------------------------
    setup = mechVehPara(setup)

    # ==============================================================================
    # MSG OUT
    # ==============================================================================
    print("=======================================================================")
    print("END: Pre-Processing")
    print("=======================================================================")
    print("\n")

    ###################################################################################################################
    # Calculation
    ###################################################################################################################
    # ==============================================================================
    # MSG IN
    # ==============================================================================
    print("=======================================================================")
    print("START: Driving Simulation")
    print("=======================================================================")

    # ==============================================================================
    # Vehicle
    # ==============================================================================
    # ------------------------------------------
    # Msg
    # ------------------------------------------
    print("------------------------------------------")
    print("Vehicle Level Simulation")
    print("------------------------------------------")

    # ------------------------------------------
    # Mechanical
    # ------------------------------------------
    # Vehicle
    dataTime['VEH'] = mechVeh(data, setup)

    # Wheels
    dataTime = mechWhe(data, dataTime, setup)

    # ------------------------------------------
    # Electrical
    # ------------------------------------------
    data = elecVeh(data, setup)

    # ------------------------------------------
    # Thermal
    # ------------------------------------------
    data = therVeh(data, setup)

    # ==============================================================================
    # Components
    # ==============================================================================
    # ------------------------------------------
    # Msg
    # ------------------------------------------
    print("------------------------------------------")
    print("Component Level Simulation")
    print("------------------------------------------")

    # ------------------------------------------
    # Init Components
    # ------------------------------------------
    # GBX
    GBX = classGBX(setup['Par']['GBX']['i'], setup['Par']['GBX']['J_gbx'], setup['Par']['GBX']['c_m'],
                   setup['Par']['GBX']['c_b'], setup['Par']['GBX']['c_w'], setup['Par']['GBX']['C_th'],
                   setup['Par']['GBX']['R_th'])

    # EMA
    EMA = classPSM(setup['Par']['EMA']['p'], setup['Par']['EMA']['n_max'], setup['Par']['EMA']['n_0'],
                   setup['Par']['EMA']['T_max'], setup['Par']['EMA']['J_rot'], setup['Par']['EMA']['I_max'],
                   setup['Par']['EMA']['P_max'], setup['Par']['EMA']['Psi'], setup['Par']['EMA']['L_d'],
                   setup['Par']['EMA']['L_q'], setup['Par']['EMA']['L_sig'], setup['Par']['EMA']['R_s'],
                   setup['Par']['EMA']['K_h'], setup['Par']['EMA']['K_f'], setup['Par']['EMA']['c_b'],
                   setup['Par']['EMA']['c_w'], setup['Par']['EMA']['C_th'], setup['Par']['EMA']['R_th'])

    # INV

    # HVS

    # ------------------------------------------
    # Iteration
    # ------------------------------------------
    for iter in tqdm(range(len(data['t'])), desc='Mission Profile'):
        # Mechanical
        dataTime = mechSim(data, dataTime, iter, setup)

        # Electrical
        dataTime = elecSim(data, dataTime, iter, setup)

        # Thermal
        dataTime = therSim(data, dataTime, iter, setup)

    # ==============================================================================
    # MSG OUT
    # ==============================================================================
    print("=======================================================================")
    print("END: Driving Simulation")
    print("=======================================================================")
    print("\n")

    ###################################################################################################################
    # Post-Processing
    ###################################################################################################################
    # ==============================================================================
    # MSG IN
    # ==============================================================================
    print("=======================================================================")
    print("START: Post-Processing")
    print("=======================================================================")

    # ==============================================================================
    # Reliability
    # ==============================================================================
    # ------------------------------------------
    # Msg
    # ------------------------------------------
    print("------------------------------------------")
    print("Calculating Reliability")
    print("------------------------------------------")

    # ------------------------------------------
    # Start
    # ------------------------------------------

    # ==============================================================================
    # Average
    # ==============================================================================
    # ------------------------------------------
    # Msg
    # ------------------------------------------
    print("------------------------------------------")
    print("Averaging results")
    print("------------------------------------------")

    # ------------------------------------------
    # Start
    # ------------------------------------------

    # ==============================================================================
    # Saving
    # ==============================================================================
    # ------------------------------------------
    # Msg
    # ------------------------------------------
    print("------------------------------------------")
    print("Saving results")
    print("------------------------------------------")

    # ------------------------------------------
    # Start
    # ------------------------------------------

    # ==============================================================================
    # Plotting
    # ==============================================================================
    # ------------------------------------------
    # Msg
    # ------------------------------------------
    print("------------------------------------------")
    print("Plotting results")
    print("------------------------------------------")

    # ------------------------------------------
    # Start
    # ------------------------------------------

    # ==============================================================================
    # MSG OUT
    # ==============================================================================
    print("=======================================================================")
    print("END: Post-Processing")
    print("=======================================================================")

    ###################################################################################################################
    # Output
    ###################################################################################################################

    return []
